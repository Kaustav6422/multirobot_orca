<?xml version="1.0"?>

<launch>

  <!-- This launch file launches the move_base package -->

  <arg name="robot" />
  <arg name="type" default="turtle" />
  <arg name="controlled" default="true" />

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
     <rosparam command="load" file="$(find collvoid_stage)/params/costmap_common_$(arg type).yaml" ns="local_costmap" /> 
     <rosparam command="load" file="$(find collvoid_stage)/params/costmap_common_$(arg type).yaml" ns="global_costmap" /> 
     <rosparam command="load" file="$(find collvoid_stage)/params/move_base_params_$(arg type).yaml" /> 
     <rosparam command="load" file="$(find collvoid_stage)/params/collvoid_config.yaml" />
     <rosparam command="load" file="$(find collvoid_stage)/params/collvoid_common.yaml" ns="CollvoidLocalPlanner" /> 
     
     <remap from="cmd_vel" to="mobile_base/commands/velocity"/> 
     <remap from="map" to="/map" />   
     <param name="~controlled" value="$(arg controlled)" />
     <param name="~tf_prefix" value="$(arg robot)" />

     <param name="global_costmap/global_frame" value="map"/>  
     <param name="global_costmap/robot_base_frame" value="$(arg robot)/base_link"/>  
     <param name="global_costmap/laser_scan_sensor/sensor_frame" value="hokuyo_link"/> 
     <param name="global_costmap/laser_scan_sensor/topic" value="$(arg robot)/base_scan"/> 

     <param name="local_costmap/global_frame" value="$(arg robot)/odom"/> 
     <param name="local_costmap/robot_base_frame" value="$(arg robot)/base_link"/> 
     <param name="local_costmap/laser_scan_sensor/sensor_frame" value="hokuyo_link"/> 
     <param name="local_costmap/laser_scan_sensor/topic" value="$(arg robot)/base_scan"/> 
     <param name="local_costmap/obstacle_layer/laser_scan_sensor/topic" value="$(arg robot)/base_scan"/> 

     <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
     <param name="base_local_planner" value="collvoid_local_planner/CollvoidLocalPlanner" /> 
  </node> 

  <rosparam command="load" file="$(find collvoid_stage)/params/me_publisher_turtle.yaml"/> ####
  <rosparam command="load" file="$(find collvoid_stage)/params/collvoid_common.yaml" ns="collvoid" /> #### 
  <param name="collvoid/base_frame" value="$(arg robot)/base_link" /> ####

  <node pkg="collvoid_local_planner" type="MePublisher" name="me_publisher"  /> ####
  <node pkg="collvoid_controller" type="position_share_controller.py" name="position_share_controller"  /> ####

  <!--<node pkg="collvoid_controller" type="active_collision_avoidance.py" name="active_collvoid">
     <param name="~base_frame_id" value="$(arg robot)/base_link" />
  </node>

  <node pkg="collvoid_controller" type="detect_obstacles.py" name="detect_obstacles" >
      <param name="~base_frame" value="$(arg robot)/base_link" />
  </node>-->

</launch>
